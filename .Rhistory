sce <- readRDS(file = here("Data/20240723_pimms_data_curation/data/webel2024_proteins.rds"))
library(tidyverse)
library(limma)
library(QFeatures)
library(plotly)
library(gridExtra)
library(here)
library("scpdata")
library(SingleCellExperiment)
sce <- readRDS(file = here("Data/20240723_pimms_data_curation/data/webel2024_proteins.rds"))
dim(sce)
sum(is.na(sce))
sum(is.na(assay(sce)))
sum(!is.na(assay(sce)))
sce[1:5,1:5]
assay(sce)[1:5,1:5]
dim(sce)
assay(sce)[1:5,100:105]
assay(sce)[1:5,1000:1005]
assay(sce)[1000:1005,1000:1005]
sce
head(colData(sce))
head(rowData(sce))
sum(duplicated(rowData(sce)))
sum(duplicated(rowData(sce)$Protein.IDs))
path <- "/kyukon/data/gent/vo/000/gvo00063/Alex/Thesis-Susanna"
library(tidyverse)
library(limma)
library(QFeatures)
library(plotly)
library(gridExtra)
library(here)
library("scpdata")
library(SingleCellExperiment)
files.sources = list.files(here("R-functions","scp-scplainer","R"))
sapply(paste0(here("R-functions","scp-scplainer", "R",files.sources)), source)
library(scplainer)
sce <- readRDS(file = here(paste0(path, "/Webel/webel2024_proteins.rds")))
sce <- as(sce, "SingleCellExperiment")
cd <- colData(sce)
qf <- QFeatures(list("sce" = sce), colData = cd)
qf <- countUniqueFeatures(
qf, i = "sce",
colDataName = "NumberPeptides"
)
MedianIntensity <- lapply(experiments(qf), function(x) {
out <- colMedians(log(assay(x)), na.rm = TRUE)
names(out) <- colnames(x)
out
})
names(MedianIntensity) <- NULL
MedianIntensity <- unlist(MedianIntensity)
colData(qf)[names(MedianIntensity), "MedianIntensity"] <- MedianIntensity
library(ggplot2)
ggplot(colData(qf)) +
aes(
y = MedianIntensity,
x = NumberPeptides
) +
geom_point(size = 2) +
scale_color_continuous(type = "viridis")
nrows(qf)[["sce"]]
qf <- filterNA(qf, i = "sce", pNA = 0.9)
nrows(qf)[["sce"]]
## 1.
colData(qf[["sce"]]) <- NULL
qf <- logTransform(qf, "sce", name = "sce_log2")
## 2.
library("scp")
qf <- scp:::normalizeSCP(
qf, i = "sce_log2", method = "center.median",
name = "sce_norm"
)
pimms_data <- getWithColData(qf, "sce_norm")
names(assays(pimms_data)) <- "logintensities"
pimms_data
saveRDS(object = pimms_data, file = here("Data/Webel/Webel_sce.RDS"))
saveRDS(object = pimms_data, file = here(paste0(path,"/Webel/Webel_sce.RDS")))
write.csv(x = assay(pimms_data,"logintensities"), file = here(paste0(path,"Data/Webel/Webel.csv")))
write.csv(x = assay(pimms_data,"logintensities"), file = here(paste0(path,"/Webel/Webel.csv")))
source(paste0(path, "/Webel/injectOutliers_intensities.R"))
source(paste0(path, "/Webel/injectOutliers_intensities.R"))
source(paste0(path, "/Webel/injectOutliers_intensities.R"))
se_outliers <- injectOutliers_normal(se = pimms_data,
freq = 10^-3,
zScore = 3,
inj="both",
lnorm = NULL,
sdlog = NULL)
assay(pimms_data)
dim(assay(pimms_data))
head(assay(pimms_data))
source(paste0(path, "/Webel/injectOutliers_intensities.R"))
se_outliers <- injectOutliers_normal(se = pimms_data,
freq = 10^-3,
zScore = 3,
inj="both",
lnorm = NULL,
sdlog = NULL)
source(paste0(path, "/Webel/injectOutliers_intensities.R"))
se_outliers <- injectOutliers_normal(se = pimms_data,
freq = 10^-3,
zScore = 3,
inj="both",
lnorm = NULL,
sdlog = NULL)
source(paste0(path, "/Webel/injectOutliers_intensities.R"))
se_outliers <- injectOutliers_normal(se = pimms_data,
freq = 10^-3,
zScore = 3,
inj="both",
lnorm = NULL,
sdlog = NULL)
source(paste0(path, "/Webel/injectOutliers_intensities.R"))
se_outliers <- injectOutliers_normal(se = pimms_data,
freq = 10^-3,
zScore = 3,
inj="both",
lnorm = NULL,
sdlog = NULL)
source(paste0(path, "/Webel/injectOutliers_intensities.R"))
se_outliers <- injectOutliers_normal(se = pimms_data,
freq = 10^-3,
zScore = 3,
inj="both",
lnorm = NULL,
sdlog = NULL)
traceback()
se_outliers
se_outliers <- injectOutliers_normal(se = pimms_data,
freq = 10^-3,
zScore = 3,
inj="both",
lnorm = NULL,
sdlog = NULL)
source(paste0(path, "/Webel/injectOutliers_intensities.R"))
se_outliers <- injectOutliers_normal(se = pimms_data,
freq = 10^-3,
zScore = 3,
inj="both",
lnorm = NULL,
sdlog = NULL)
source(paste0(path, "/Webel/injectOutliers_intensities.R"))
se_outliers <- injectOutliers_normal(se = pimms_data,
freq = 10^-3,
zScore = 3,
inj="both",
lnorm = NULL,
sdlog = NULL)
size
prod(assay(se))
prod(dim(assay(se)))
length(index)
sum(is.na(index_matrix))
zSore
zScore
se_outliers <- injectOutliers_normal(se = pimms_data,
freq = 10^-3,
zScore = 3,
inj="both",
lnorm = NULL,
sdlog = NULL)
source(paste0(path, "/Webel/injectOutliers_intensities.R"))
se_outliers <- injectOutliers_normal(se = pimms_data,
freq = 10^-3,
zScore = 3,
inj="both",
lnorm = NULL,
sdlog = NULL)
se_outliers <- injectOutliers_normal(se = pimms_data,
freq = 10^-3,
zScore = 3,
inj="both",
lnorm = NULL,
sdlog = NULL)
source(paste0(path, "/Webel/injectOutliers_intensities.R"))
se_outliers <- injectOutliers_normal(se = pimms_data,
freq = 10^-3,
zScore = 3,
inj="both",
lnorm = NULL,
sdlog = NULL)
list_index
index
list_index <- which(index_matrix != 0, arr.ind = TRUE)
list_index
head(index_matrix)
index_matrix[1:5,1:5]
source(paste0(path, "/Webel/injectOutliers_intensities.R"))
se_outliers <- injectOutliers_normal(se = pimms_data,
freq = 10^-3,
zScore = 3,
inj="both",
lnorm = NULL,
sdlog = NULL)
list_index
list_index[1:5,1:5]
list_index[1:5,1:2]
mu
source(paste0(path, "/Webel/injectOutliers_intensities.R"))
se_outliers <- injectOutliers_normal(se = pimms_data,
freq = 10^-3,
zScore = 3,
inj="both",
lnorm = NULL,
sdlog = NULL)
source(paste0(path, "/Webel/injectOutliers_intensities.R"))
se_outliers <- injectOutliers_normal(se = pimms_data,
freq = 10^-3,
zScore = 3,
inj="both",
lnorm = NULL,
sdlog = NULL)
source(paste0(path, "/Webel/injectOutliers_intensities.R"))
se_outliers <- injectOutliers_normal(se = pimms_data,
freq = 10^-3,
zScore = 3,
inj="both",
lnorm = NULL,
sdlog = NULL)
se_outliers
dim(assay(se_outliers, 'logintensities'))
sum(assay(se_outliers, 'logintensities') != (se_outliers, 'trueIntensities'))
sum(assay(se_outliers, 'logintensities') != assay(se_outliers, 'trueIntensities'))
sum(assay(se_outliers, 'logintensities') != assay(se_outliers, 'trueIntensities'), na.rm= T)
sum(assay(se_outliers, 'Outliers'), na.rm= T)
sum(abs(assay(se_outliers, 'Outliers'), na.rm= T))
sum(abs(assay(se_outliers, 'Outliers')), na.rm= T)
source(paste0(path, "/Webel/injectOutliers_intensities.R"))
se_outliers <- injectOutliers_normal(se = pimms_data,
freq = 10^-3,
zScore = 3,
inj="both",
lnorm = NULL,
sdlog = NULL)
sum(index_matrix)
sum(!index_matrix)
sum(abs(index_matrix))
intensities[idxRow,idxCol]
assay(se, 'trueIntensities')[idxRow,idxCol]
sum(assay(se_outliers, 'logintensities') != (se_outliers, 'trueIntensities'))
sum(assay(se_outliers, 'logintensities') != (se_outliers, 'trueIntensities'), na.rm = T)
sum(assay(se_outliers, 'logintensities') != assay(se_outliers, 'trueIntensities'), na.rm = T)
assay(se_outliers, 'logintensities') [1:5,1:5]
assay(se_outliers, 'trueIntensities') [1:5,1:5]
assay(se_outliers, 'Outliers') [1:5,1:5]
sum(assay(se_outliers, 'Outliers'))
head(assay(se_outliers, 'trueIntensities')[(assay(se_outliers, 'Outliers'))!=0])
head(assay(se_outliers, 'Intensities')[(assay(se_outliers, 'Outliers'))!=0])
head(assay(se_outliers, 'intensities')[(assay(se_outliers, 'Outliers'))!=0])
sum(assay(se_outliers, 'intensities') != assay(se_outliers, 'trueIntensities'), na.rm = T)
source(paste0(path, "/Webel/injectOutliers_intensities.R"))
se_outliers <- injectOutliers_normal(se = pimms_data,
freq = 10^-3,
zScore = 3,
inj="both",
lnorm = NULL,
sdlog = NULL)
set.seed(100)
se_outliers <- injectOutliers_normal(se = pimms_data,
freq = 10^-3,
zScore = 3,
inj="both",
lnorm = NULL,
sdlog = NULL)
source(paste0(path, "/Webel/injectOutliers_intensities.R"))
set.seed(100)
se_outliers <- injectOutliers_normal(se = pimms_data,
freq = 10^-3,
zScore = 3,
inj="both",
lnorm = NULL,
sdlog = NULL)
pimms_data
se_outliers
saveRDS(object = se_outliers, file = here(paste0(path,"/Webel/Webel_sce_Marginal_Outliers.RDS")))
write.csv(x = assay(se_outliers,"logintensities"), file = here(paste0(path,"/Webel/Webel_Marginal_Outliers.csv")))
summary((assay(se_outliers,'logintensities')-assay(se_outliers, 'trueIntensities')[assay(se_outliers,'Outliers')!=0])
)
summary(c(unlist((assay(se_outliers,'logintensities')-assay(se_outliers, 'trueIntensities')[assay(se_outliers,'Outliers')!=0]))))
(c(unlist((assay(se_outliers,'logintensities')-assay(se_outliers, 'trueIntensities')[assay(se_outliers,'Outliers')!=0]))))
(c(unlist((assay(se_outliers,'logintensities')-assay(se_outliers, 'trueIntensities'))[assay(se_outliers,'Outliers')!=0])))
summary(c(unlist((assay(se_outliers,'logintensities')-assay(se_outliers, 'trueIntensities'))[assay(se_outliers,'Outliers')!=0])))
summary(abs(c(unlist((assay(se_outliers,'logintensities')-assay(se_outliers, 'trueIntensities'))[assay(se_outliers,'Outliers')!=0]))))
summary(abs(c(unlist((assay(se_outliers,'logintensities'))[assay(se_outliers,'Outliers')==0]))))
summary((c(unlist((assay(se_outliers,'logintensities'))[assay(se_outliers,'Outliers')==0]))))
summary((c(unlist((assay(se_outliers,'trueIntensities')[assay(se_outliers,'Outliers')==0])))))
min(assay(se_outliers,'trueIntensities'))
min(assay(se_outliers,'trueIntensities'),na.rm = T)
max(assay(se_outliers,'trueIntensities'),na.rm = T)
summary(assay(se_outliers,'trueIntensities'),na.rm = T)
summary(c(unlist(assay(se_outliers,'trueIntensities'),na.rm = T)))
summary(c(unlist(assay(se_outliers,'trueIntensities'))))
min(c(unlist(assay(se_outliers,'trueIntensities'))))
min(c(unlist(assay(se_outliers,'trueIntensities'))), na.rm = T)
devtools::load_all("/data/gent/vo/000/gvo00063/Alex/sgdFollowUp/sgdGMFWrapper/BiocSGDGMF/R")
devtools::build()
devtools::install()
devtools::build()
BiocCheck::BiocCheck()
BiocCheck::BiocCheck()
browseVignettes(package = 'BiocCheck')
browseVignettes(package = 'BiocCheck')
devtools::build()
.Last.error
devtools::build()
R CMD check
devtools::check()
devtools::check()
devtools::check()
?poisson
sgd
sce
example_sce <- mockSCE(ncells = 20, ngenes = 500)
library(sgdGMF)
library(scSGDGMF)
library(dplyr)
library(scuttle)
set.seed(100)
example_sce <- mockSCE(ncells = 20, ngenes = 500)
example_sce
metadata(example_sce, "sgd") <- test
metadata(example_sce, "sgd") <- c(1:5)
example_sce
metadata(example_sce, "sgd") <- c(1:5)
traceback()
?metadata
metadata(example_sce)[["sgd"]] <- c(1:5)
metadata(example_sce)
name <- "SGD"
metadata(example_sce)[[name]] <- c(1:5)
metadata(example_sce)
?assay
scater::altExp
scater:::altExp
scater::::altExp
scater:::altExp
?scater:::altExp
??altExp
?metadata
SummarizedExperiment::`metadata<-`()
SummarizedExperiment::`metadata<-`
??assay<-
?plotPCA
?plotReducedDim
?plotPCA
?plotUMAP
?Reduced dimension plots
\link{\code[scater]{plotReducedDim}}
devtools::document()
mem.maxVSize()
mem.maxVSize()
devtools::document()
rm(list=ls())
mem.maxVSize()
rm(list=ls())
devtools::document()
gc()
devtools::document()
devtools::build()
devtools::document()
devtools::document()
devtools::build()
devtools::build()
devtools::document()
traceback()
roxygen2::roxygenise()
?runSGD
?runSGD_cv
?runSGD
?runSGD_cv
?runSGD
roxygen2::roxygenise()
?runSGD_cv
?runSGD_cv
?plotSGD
?SGDImpute
?plotSGD
?plot_reddim
?plot_reddim
?plotSGD
?plotSGD
?plotSGD
devtools::build()
devtools::build()
devtools::build()
?runSGD_cv
?runSGD
?SGDImpute
?runSGD
?plotSGD
?SGDImpute
?SGDImpute
devtools::build()
?plotSGD
?plotSGD
library(scSGDGMF)
?plotSGD
??plotSGD
?scSGDGMF::plotSGD
?`scater`
?scSGDGMF::plotSGD_cv
devtools::document()
devtools::check()
